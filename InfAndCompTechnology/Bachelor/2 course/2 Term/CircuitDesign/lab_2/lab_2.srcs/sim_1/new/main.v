`timescale 1ns / 1ps
module main(
    );
reg clk, R_I;
reg [15:0] in, min, mean, max;
wire [15:0] out;
wire R_O;
wire [1:0] err;
initial
begin
    // Установка 3х тестовых чисел
    min = 16'b0010110100000000;
    max = 16'b0011110100000000;
    mean = 16'b0010111100000000;
    clk = 0;
    R_I = 0;
    #30;
    // Тест на число элементом, превышающее допустимое
    in = 19;
    R_I = 1;
    #30
    R_I = 0;
    #30;
    // Тест ввода недопустимого числа
    in = 3;
    R_I = 1;
    #30;
    R_I = 0;
    #30;
    in = 16'b1111110000000001;
    R_I = 1;
    #30;
    // Тест с убывающими значениями
    R_I = 0;
    #30;
    in = 3;
    R_I = 1;
    #30;
    R_I = 0;
    #30;
    in = max;
    R_I = 1;
    #30;
    R_I = 0;
    #30;
    in = mean;
    R_I = 1;
    #30;
    R_I = 0;
    #30;
    in = min;
    R_I = 1;
    #30;
    R_I = 0;
    #350;
    R_I = 1;
    #30
    R_I = 0;
    #30;
    R_I = 1;
    #30
    R_I = 0;
    #30;
    R_I = 1;
    #30
    // Тест с повторяющимися значениями
    R_I = 0;
    #30;
    in = 4;
    R_I = 1;
    #30;
    R_I = 0;
    #30;
    in = mean;
    R_I = 1;
    #30;
    R_I = 0;
    #30;
    in = mean;
    R_I = 1;
    #30;
    R_I = 0;
    #30;
    in = min;
    R_I = 1;
    #30;
    R_I = 0;
    #30;
    in = max;
    R_I = 1;
    #350;
    R_I = 0;
    #30;
    R_I = 1;
    #30;
    R_I = 0;
    #30;
    R_I = 1;
    #30;
    R_I = 0;
    #30;
    R_I = 1;
    #30;
    R_I = 0;
    #30;
    R_I = 1;
    #30;
    R_I = 0;
    #30;
    R_I = 1;
    #30;
    R_I = 0;
    #30;
    R_I = 1;
    #30;
    R_I = 0;
    #30;
    R_I = 1;
    #30;
    R_I = 0;
    #30;
    R_I = 1;
    #30;
    R_I = 0;
    #30;
    R_I = 1;
    #30;
    R_I = 0;
    #30;
    R_I = 1;
    #30;
    $finish;
end
always#5 clk=~clk;
sorter sort(
    .clk(clk),
    .R_I(R_I),
    .in(in),
    .out(out),
    .R_O(R_O),
    .err(err)
);
endmodule
